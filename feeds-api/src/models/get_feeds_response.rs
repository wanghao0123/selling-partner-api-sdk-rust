/* 
 * Selling Partner API for Feeds
 *
 * The Selling Partner API for Feeds lets you upload data to Amazon on behalf of a selling partner.
 *
 * OpenAPI spec version: 2021-06-30
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// GetFeedsResponse : Response schema.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct GetFeedsResponse {
  /// The feeds.
  #[serde(rename = "feeds")]
  feeds: ::models::FeedList,
  /// Returned when the number of results exceeds pageSize. To get the next page of results, call the getFeeds operation with this token as the only parameter.
  #[serde(rename = "nextToken")]
  next_token: Option<String>
}

impl GetFeedsResponse {
  /// Response schema.
  pub fn new(feeds: ::models::FeedList) -> GetFeedsResponse {
    GetFeedsResponse {
      feeds: feeds,
      next_token: None
    }
  }

  pub fn set_feeds(&mut self, feeds: ::models::FeedList) {
    self.feeds = feeds;
  }

  pub fn with_feeds(mut self, feeds: ::models::FeedList) -> GetFeedsResponse {
    self.feeds = feeds;
    self
  }

  pub fn feeds(&self) -> &::models::FeedList {
    &self.feeds
  }


  pub fn set_next_token(&mut self, next_token: String) {
    self.next_token = Some(next_token);
  }

  pub fn with_next_token(mut self, next_token: String) -> GetFeedsResponse {
    self.next_token = Some(next_token);
    self
  }

  pub fn next_token(&self) -> Option<&String> {
    self.next_token.as_ref()
  }

  pub fn reset_next_token(&mut self) {
    self.next_token = None;
  }

}



