/* 
 * Selling Partner API for Sellers
 *
 * The Selling Partner API for Sellers lets you retrieve information on behalf of sellers about their seller account, such as the marketplaces they participate in. Along with listing the marketplaces that a seller can sell in, the API also provides additional information about the marketplace such as the default language and the default currency. The API also provides seller-specific information such as whether the seller has suspended listings in that marketplace.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// Participation : Detailed information that is specific to a seller in a Marketplace.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct Participation {
  #[serde(rename = "isParticipating")]
  is_participating: bool,
  /// Specifies if the seller has suspended listings. True if the seller Listing Status is set to Inactive, otherwise False.
  #[serde(rename = "hasSuspendedListings")]
  has_suspended_listings: bool
}

impl Participation {
  /// Detailed information that is specific to a seller in a Marketplace.
  pub fn new(is_participating: bool, has_suspended_listings: bool) -> Participation {
    Participation {
      is_participating: is_participating,
      has_suspended_listings: has_suspended_listings
    }
  }

  pub fn set_is_participating(&mut self, is_participating: bool) {
    self.is_participating = is_participating;
  }

  pub fn with_is_participating(mut self, is_participating: bool) -> Participation {
    self.is_participating = is_participating;
    self
  }

  pub fn is_participating(&self) -> &bool {
    &self.is_participating
  }


  pub fn set_has_suspended_listings(&mut self, has_suspended_listings: bool) {
    self.has_suspended_listings = has_suspended_listings;
  }

  pub fn with_has_suspended_listings(mut self, has_suspended_listings: bool) -> Participation {
    self.has_suspended_listings = has_suspended_listings;
    self
  }

  pub fn has_suspended_listings(&self) -> &bool {
    &self.has_suspended_listings
  }


}



