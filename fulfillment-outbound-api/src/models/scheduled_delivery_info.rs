/* 
 * Selling Partner APIs for Fulfillment Outbound
 *
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * OpenAPI spec version: 2020-07-01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// ScheduledDeliveryInfo : Delivery information for a scheduled delivery.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ScheduledDeliveryInfo {
  /// The time zone of the destination address for the fulfillment order preview. Must be an IANA time zone name. Example: Asia/Tokyo.
  #[serde(rename = "deliveryTimeZone")]
  delivery_time_zone: String,
  /// An array of time ranges that are available for scheduled delivery.
  #[serde(rename = "deliveryWindows")]
  delivery_windows: ::models::DeliveryWindowList
}

impl ScheduledDeliveryInfo {
  /// Delivery information for a scheduled delivery.
  pub fn new(delivery_time_zone: String, delivery_windows: ::models::DeliveryWindowList) -> ScheduledDeliveryInfo {
    ScheduledDeliveryInfo {
      delivery_time_zone: delivery_time_zone,
      delivery_windows: delivery_windows
    }
  }

  pub fn set_delivery_time_zone(&mut self, delivery_time_zone: String) {
    self.delivery_time_zone = delivery_time_zone;
  }

  pub fn with_delivery_time_zone(mut self, delivery_time_zone: String) -> ScheduledDeliveryInfo {
    self.delivery_time_zone = delivery_time_zone;
    self
  }

  pub fn delivery_time_zone(&self) -> &String {
    &self.delivery_time_zone
  }


  pub fn set_delivery_windows(&mut self, delivery_windows: ::models::DeliveryWindowList) {
    self.delivery_windows = delivery_windows;
  }

  pub fn with_delivery_windows(mut self, delivery_windows: ::models::DeliveryWindowList) -> ScheduledDeliveryInfo {
    self.delivery_windows = delivery_windows;
    self
  }

  pub fn delivery_windows(&self) -> &::models::DeliveryWindowList {
    &self.delivery_windows
  }


}



