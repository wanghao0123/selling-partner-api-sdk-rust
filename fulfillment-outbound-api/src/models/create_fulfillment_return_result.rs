/* 
 * Selling Partner APIs for Fulfillment Outbound
 *
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * OpenAPI spec version: 2020-07-01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct CreateFulfillmentReturnResult {
  #[serde(rename = "returnItems")]
  return_items: Option<::models::ReturnItemList>,
  #[serde(rename = "invalidReturnItems")]
  invalid_return_items: Option<::models::InvalidReturnItemList>,
  #[serde(rename = "returnAuthorizations")]
  return_authorizations: Option<::models::ReturnAuthorizationList>
}

impl CreateFulfillmentReturnResult {
  pub fn new() -> CreateFulfillmentReturnResult {
    CreateFulfillmentReturnResult {
      return_items: None,
      invalid_return_items: None,
      return_authorizations: None
    }
  }

  pub fn set_return_items(&mut self, return_items: ::models::ReturnItemList) {
    self.return_items = Some(return_items);
  }

  pub fn with_return_items(mut self, return_items: ::models::ReturnItemList) -> CreateFulfillmentReturnResult {
    self.return_items = Some(return_items);
    self
  }

  pub fn return_items(&self) -> Option<&::models::ReturnItemList> {
    self.return_items.as_ref()
  }

  pub fn reset_return_items(&mut self) {
    self.return_items = None;
  }

  pub fn set_invalid_return_items(&mut self, invalid_return_items: ::models::InvalidReturnItemList) {
    self.invalid_return_items = Some(invalid_return_items);
  }

  pub fn with_invalid_return_items(mut self, invalid_return_items: ::models::InvalidReturnItemList) -> CreateFulfillmentReturnResult {
    self.invalid_return_items = Some(invalid_return_items);
    self
  }

  pub fn invalid_return_items(&self) -> Option<&::models::InvalidReturnItemList> {
    self.invalid_return_items.as_ref()
  }

  pub fn reset_invalid_return_items(&mut self) {
    self.invalid_return_items = None;
  }

  pub fn set_return_authorizations(&mut self, return_authorizations: ::models::ReturnAuthorizationList) {
    self.return_authorizations = Some(return_authorizations);
  }

  pub fn with_return_authorizations(mut self, return_authorizations: ::models::ReturnAuthorizationList) -> CreateFulfillmentReturnResult {
    self.return_authorizations = Some(return_authorizations);
    self
  }

  pub fn return_authorizations(&self) -> Option<&::models::ReturnAuthorizationList> {
    self.return_authorizations.as_ref()
  }

  pub fn reset_return_authorizations(&mut self) {
    self.return_authorizations = None;
  }

}



