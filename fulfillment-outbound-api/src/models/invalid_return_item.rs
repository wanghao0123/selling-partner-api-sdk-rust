/* 
 * Selling Partner APIs for Fulfillment Outbound
 *
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * OpenAPI spec version: 2020-07-01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// InvalidReturnItem : An item that is invalid for return.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct InvalidReturnItem {
  /// An identifier assigned by the seller to the return item.
  #[serde(rename = "sellerReturnItemId")]
  seller_return_item_id: String,
  /// The identifier assigned to the item by the seller when the fulfillment order was created.
  #[serde(rename = "sellerFulfillmentOrderItemId")]
  seller_fulfillment_order_item_id: String,
  #[serde(rename = "invalidItemReason")]
  invalid_item_reason: ::models::InvalidItemReason
}

impl InvalidReturnItem {
  /// An item that is invalid for return.
  pub fn new(seller_return_item_id: String, seller_fulfillment_order_item_id: String, invalid_item_reason: ::models::InvalidItemReason) -> InvalidReturnItem {
    InvalidReturnItem {
      seller_return_item_id: seller_return_item_id,
      seller_fulfillment_order_item_id: seller_fulfillment_order_item_id,
      invalid_item_reason: invalid_item_reason
    }
  }

  pub fn set_seller_return_item_id(&mut self, seller_return_item_id: String) {
    self.seller_return_item_id = seller_return_item_id;
  }

  pub fn with_seller_return_item_id(mut self, seller_return_item_id: String) -> InvalidReturnItem {
    self.seller_return_item_id = seller_return_item_id;
    self
  }

  pub fn seller_return_item_id(&self) -> &String {
    &self.seller_return_item_id
  }


  pub fn set_seller_fulfillment_order_item_id(&mut self, seller_fulfillment_order_item_id: String) {
    self.seller_fulfillment_order_item_id = seller_fulfillment_order_item_id;
  }

  pub fn with_seller_fulfillment_order_item_id(mut self, seller_fulfillment_order_item_id: String) -> InvalidReturnItem {
    self.seller_fulfillment_order_item_id = seller_fulfillment_order_item_id;
    self
  }

  pub fn seller_fulfillment_order_item_id(&self) -> &String {
    &self.seller_fulfillment_order_item_id
  }


  pub fn set_invalid_item_reason(&mut self, invalid_item_reason: ::models::InvalidItemReason) {
    self.invalid_item_reason = invalid_item_reason;
  }

  pub fn with_invalid_item_reason(mut self, invalid_item_reason: ::models::InvalidItemReason) -> InvalidReturnItem {
    self.invalid_item_reason = invalid_item_reason;
    self
  }

  pub fn invalid_item_reason(&self) -> &::models::InvalidItemReason {
    &self.invalid_item_reason
  }


}



