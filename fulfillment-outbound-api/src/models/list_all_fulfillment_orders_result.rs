/* 
 * Selling Partner APIs for Fulfillment Outbound
 *
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * OpenAPI spec version: 2020-07-01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ListAllFulfillmentOrdersResult {
  /// When present and not empty, pass this string token in the next request to return the next response page.
  #[serde(rename = "nextToken")]
  next_token: Option<String>,
  /// An array of fulfillment order information.
  #[serde(rename = "fulfillmentOrders")]
  fulfillment_orders: Option<Vec<::models::FulfillmentOrder>>
}

impl ListAllFulfillmentOrdersResult {
  pub fn new() -> ListAllFulfillmentOrdersResult {
    ListAllFulfillmentOrdersResult {
      next_token: None,
      fulfillment_orders: None
    }
  }

  pub fn set_next_token(&mut self, next_token: String) {
    self.next_token = Some(next_token);
  }

  pub fn with_next_token(mut self, next_token: String) -> ListAllFulfillmentOrdersResult {
    self.next_token = Some(next_token);
    self
  }

  pub fn next_token(&self) -> Option<&String> {
    self.next_token.as_ref()
  }

  pub fn reset_next_token(&mut self) {
    self.next_token = None;
  }

  pub fn set_fulfillment_orders(&mut self, fulfillment_orders: Vec<::models::FulfillmentOrder>) {
    self.fulfillment_orders = Some(fulfillment_orders);
  }

  pub fn with_fulfillment_orders(mut self, fulfillment_orders: Vec<::models::FulfillmentOrder>) -> ListAllFulfillmentOrdersResult {
    self.fulfillment_orders = Some(fulfillment_orders);
    self
  }

  pub fn fulfillment_orders(&self) -> Option<&Vec<::models::FulfillmentOrder>> {
    self.fulfillment_orders.as_ref()
  }

  pub fn reset_fulfillment_orders(&mut self) {
    self.fulfillment_orders = None;
  }

}



