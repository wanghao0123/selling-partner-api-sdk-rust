/* 
 * Selling Partner API for Fulfillment Inbound
 *
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
 *
 * OpenAPI spec version: v0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct InvalidAsin {
  /// The Amazon Standard Identification Number (ASIN) of the item.
  #[serde(rename = "ASIN")]
  ASIN: Option<String>,
  /// The reason that the ASIN is invalid.
  #[serde(rename = "ErrorReason")]
  error_reason: Option<::models::ErrorReason>
}

impl InvalidAsin {
  pub fn new() -> InvalidAsin {
    InvalidAsin {
      ASIN: None,
      error_reason: None
    }
  }

  pub fn set_ASIN(&mut self, ASIN: String) {
    self.ASIN = Some(ASIN);
  }

  pub fn with_ASIN(mut self, ASIN: String) -> InvalidAsin {
    self.ASIN = Some(ASIN);
    self
  }

  pub fn ASIN(&self) -> Option<&String> {
    self.ASIN.as_ref()
  }

  pub fn reset_ASIN(&mut self) {
    self.ASIN = None;
  }

  pub fn set_error_reason(&mut self, error_reason: ::models::ErrorReason) {
    self.error_reason = Some(error_reason);
  }

  pub fn with_error_reason(mut self, error_reason: ::models::ErrorReason) -> InvalidAsin {
    self.error_reason = Some(error_reason);
    self
  }

  pub fn error_reason(&self) -> Option<&::models::ErrorReason> {
    self.error_reason.as_ref()
  }

  pub fn reset_error_reason(&mut self) {
    self.error_reason = None;
  }

}



