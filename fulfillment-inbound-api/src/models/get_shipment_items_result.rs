/* 
 * Selling Partner API for Fulfillment Inbound
 *
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
 *
 * OpenAPI spec version: v0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct GetShipmentItemsResult {
  /// A list of item information for an inbound shipment.
  #[serde(rename = "ItemData")]
  item_data: Option<::models::InboundShipmentItemList>,
  /// When present and not empty, pass this string token in the next request to return the next response page.
  #[serde(rename = "NextToken")]
  next_token: Option<String>
}

impl GetShipmentItemsResult {
  pub fn new() -> GetShipmentItemsResult {
    GetShipmentItemsResult {
      item_data: None,
      next_token: None
    }
  }

  pub fn set_item_data(&mut self, item_data: ::models::InboundShipmentItemList) {
    self.item_data = Some(item_data);
  }

  pub fn with_item_data(mut self, item_data: ::models::InboundShipmentItemList) -> GetShipmentItemsResult {
    self.item_data = Some(item_data);
    self
  }

  pub fn item_data(&self) -> Option<&::models::InboundShipmentItemList> {
    self.item_data.as_ref()
  }

  pub fn reset_item_data(&mut self) {
    self.item_data = None;
  }

  pub fn set_next_token(&mut self, next_token: String) {
    self.next_token = Some(next_token);
  }

  pub fn with_next_token(mut self, next_token: String) -> GetShipmentItemsResult {
    self.next_token = Some(next_token);
    self
  }

  pub fn next_token(&self) -> Option<&String> {
    self.next_token.as_ref()
  }

  pub fn reset_next_token(&mut self) {
    self.next_token = None;
  }

}



