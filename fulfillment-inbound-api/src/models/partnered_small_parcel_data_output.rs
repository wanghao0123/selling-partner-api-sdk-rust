/* 
 * Selling Partner API for Fulfillment Inbound
 *
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
 *
 * OpenAPI spec version: v0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// PartneredSmallParcelDataOutput : Information returned by Amazon about a Small Parcel shipment by an Amazon-partnered carrier.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct PartneredSmallParcelDataOutput {
  #[serde(rename = "PackageList")]
  package_list: ::models::PartneredSmallParcelPackageOutputList,
  #[serde(rename = "PartneredEstimate")]
  partnered_estimate: Option<::models::PartneredEstimate>
}

impl PartneredSmallParcelDataOutput {
  /// Information returned by Amazon about a Small Parcel shipment by an Amazon-partnered carrier.
  pub fn new(package_list: ::models::PartneredSmallParcelPackageOutputList) -> PartneredSmallParcelDataOutput {
    PartneredSmallParcelDataOutput {
      package_list: package_list,
      partnered_estimate: None
    }
  }

  pub fn set_package_list(&mut self, package_list: ::models::PartneredSmallParcelPackageOutputList) {
    self.package_list = package_list;
  }

  pub fn with_package_list(mut self, package_list: ::models::PartneredSmallParcelPackageOutputList) -> PartneredSmallParcelDataOutput {
    self.package_list = package_list;
    self
  }

  pub fn package_list(&self) -> &::models::PartneredSmallParcelPackageOutputList {
    &self.package_list
  }


  pub fn set_partnered_estimate(&mut self, partnered_estimate: ::models::PartneredEstimate) {
    self.partnered_estimate = Some(partnered_estimate);
  }

  pub fn with_partnered_estimate(mut self, partnered_estimate: ::models::PartneredEstimate) -> PartneredSmallParcelDataOutput {
    self.partnered_estimate = Some(partnered_estimate);
    self
  }

  pub fn partnered_estimate(&self) -> Option<&::models::PartneredEstimate> {
    self.partnered_estimate.as_ref()
  }

  pub fn reset_partnered_estimate(&mut self) {
    self.partnered_estimate = None;
  }

}



