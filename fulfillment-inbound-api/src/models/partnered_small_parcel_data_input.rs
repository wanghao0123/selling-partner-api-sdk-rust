/* 
 * Selling Partner API for Fulfillment Inbound
 *
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
 *
 * OpenAPI spec version: v0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// PartneredSmallParcelDataInput : Information that is required by an Amazon-partnered carrier to ship a Small Parcel inbound shipment.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct PartneredSmallParcelDataInput {
  #[serde(rename = "PackageList")]
  package_list: Option<::models::PartneredSmallParcelPackageInputList>,
  /// The Amazon-partnered carrier to use for the inbound shipment.
  #[serde(rename = "CarrierName")]
  carrier_name: Option<String>
}

impl PartneredSmallParcelDataInput {
  /// Information that is required by an Amazon-partnered carrier to ship a Small Parcel inbound shipment.
  pub fn new() -> PartneredSmallParcelDataInput {
    PartneredSmallParcelDataInput {
      package_list: None,
      carrier_name: None
    }
  }

  pub fn set_package_list(&mut self, package_list: ::models::PartneredSmallParcelPackageInputList) {
    self.package_list = Some(package_list);
  }

  pub fn with_package_list(mut self, package_list: ::models::PartneredSmallParcelPackageInputList) -> PartneredSmallParcelDataInput {
    self.package_list = Some(package_list);
    self
  }

  pub fn package_list(&self) -> Option<&::models::PartneredSmallParcelPackageInputList> {
    self.package_list.as_ref()
  }

  pub fn reset_package_list(&mut self) {
    self.package_list = None;
  }

  pub fn set_carrier_name(&mut self, carrier_name: String) {
    self.carrier_name = Some(carrier_name);
  }

  pub fn with_carrier_name(mut self, carrier_name: String) -> PartneredSmallParcelDataInput {
    self.carrier_name = Some(carrier_name);
    self
  }

  pub fn carrier_name(&self) -> Option<&String> {
    self.carrier_name.as_ref()
  }

  pub fn reset_carrier_name(&mut self) {
    self.carrier_name = None;
  }

}



