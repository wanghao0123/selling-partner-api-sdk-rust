/* 
 * Selling Partner API for Fulfillment Inbound
 *
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
 *
 * OpenAPI spec version: v0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// InboundShipmentRequest : The request schema for an inbound shipment.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct InboundShipmentRequest {
  #[serde(rename = "InboundShipmentHeader")]
  inbound_shipment_header: ::models::InboundShipmentHeader,
  #[serde(rename = "InboundShipmentItems")]
  inbound_shipment_items: ::models::InboundShipmentItemList,
  /// A marketplace identifier. Specifies the marketplace where the product would be stored.
  #[serde(rename = "MarketplaceId")]
  marketplace_id: String
}

impl InboundShipmentRequest {
  /// The request schema for an inbound shipment.
  pub fn new(inbound_shipment_header: ::models::InboundShipmentHeader, inbound_shipment_items: ::models::InboundShipmentItemList, marketplace_id: String) -> InboundShipmentRequest {
    InboundShipmentRequest {
      inbound_shipment_header: inbound_shipment_header,
      inbound_shipment_items: inbound_shipment_items,
      marketplace_id: marketplace_id
    }
  }

  pub fn set_inbound_shipment_header(&mut self, inbound_shipment_header: ::models::InboundShipmentHeader) {
    self.inbound_shipment_header = inbound_shipment_header;
  }

  pub fn with_inbound_shipment_header(mut self, inbound_shipment_header: ::models::InboundShipmentHeader) -> InboundShipmentRequest {
    self.inbound_shipment_header = inbound_shipment_header;
    self
  }

  pub fn inbound_shipment_header(&self) -> &::models::InboundShipmentHeader {
    &self.inbound_shipment_header
  }


  pub fn set_inbound_shipment_items(&mut self, inbound_shipment_items: ::models::InboundShipmentItemList) {
    self.inbound_shipment_items = inbound_shipment_items;
  }

  pub fn with_inbound_shipment_items(mut self, inbound_shipment_items: ::models::InboundShipmentItemList) -> InboundShipmentRequest {
    self.inbound_shipment_items = inbound_shipment_items;
    self
  }

  pub fn inbound_shipment_items(&self) -> &::models::InboundShipmentItemList {
    &self.inbound_shipment_items
  }


  pub fn set_marketplace_id(&mut self, marketplace_id: String) {
    self.marketplace_id = marketplace_id;
  }

  pub fn with_marketplace_id(mut self, marketplace_id: String) -> InboundShipmentRequest {
    self.marketplace_id = marketplace_id;
    self
  }

  pub fn marketplace_id(&self) -> &String {
    &self.marketplace_id
  }


}



