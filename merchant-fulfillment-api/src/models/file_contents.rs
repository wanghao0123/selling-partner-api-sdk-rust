/* 
 * Selling Partner API for Merchant Fulfillment
 *
 * The Selling Partner API for Merchant Fulfillment helps you build applications that let sellers purchase shipping for non-Prime and Prime orders using Amazonâ€™s Buy Shipping Services.
 *
 * OpenAPI spec version: v0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// FileContents : The document data and checksum.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct FileContents {
  /// Data for printing labels, in the form of a Base64-encoded, GZip-compressed string.
  #[serde(rename = "Contents")]
  contents: String,
  #[serde(rename = "FileType")]
  file_type: ::models::FileType,
  /// An MD5 hash to validate the PDF document data, in the form of a Base64-encoded string.
  #[serde(rename = "Checksum")]
  checksum: String
}

impl FileContents {
  /// The document data and checksum.
  pub fn new(contents: String, file_type: ::models::FileType, checksum: String) -> FileContents {
    FileContents {
      contents: contents,
      file_type: file_type,
      checksum: checksum
    }
  }

  pub fn set_contents(&mut self, contents: String) {
    self.contents = contents;
  }

  pub fn with_contents(mut self, contents: String) -> FileContents {
    self.contents = contents;
    self
  }

  pub fn contents(&self) -> &String {
    &self.contents
  }


  pub fn set_file_type(&mut self, file_type: ::models::FileType) {
    self.file_type = file_type;
  }

  pub fn with_file_type(mut self, file_type: ::models::FileType) -> FileContents {
    self.file_type = file_type;
    self
  }

  pub fn file_type(&self) -> &::models::FileType {
    &self.file_type
  }


  pub fn set_checksum(&mut self, checksum: String) {
    self.checksum = checksum;
  }

  pub fn with_checksum(mut self, checksum: String) -> FileContents {
    self.checksum = checksum;
    self
  }

  pub fn checksum(&self) -> &String {
    &self.checksum
  }


}



