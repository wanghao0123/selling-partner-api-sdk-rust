/* 
 * Selling Partner API for Merchant Fulfillment
 *
 * The Selling Partner API for Merchant Fulfillment helps you build applications that let sellers purchase shipping for non-Prime and Prime orders using Amazonâ€™s Buy Shipping Services.
 *
 * OpenAPI spec version: v0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// AdditionalInputs : Maps the additional seller input to the definition. The key to the map is the field name.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct AdditionalInputs {
  /// The field name.
  #[serde(rename = "AdditionalInputFieldName")]
  additional_input_field_name: Option<String>,
  #[serde(rename = "SellerInputDefinition")]
  seller_input_definition: Option<::models::SellerInputDefinition>
}

impl AdditionalInputs {
  /// Maps the additional seller input to the definition. The key to the map is the field name.
  pub fn new() -> AdditionalInputs {
    AdditionalInputs {
      additional_input_field_name: None,
      seller_input_definition: None
    }
  }

  pub fn set_additional_input_field_name(&mut self, additional_input_field_name: String) {
    self.additional_input_field_name = Some(additional_input_field_name);
  }

  pub fn with_additional_input_field_name(mut self, additional_input_field_name: String) -> AdditionalInputs {
    self.additional_input_field_name = Some(additional_input_field_name);
    self
  }

  pub fn additional_input_field_name(&self) -> Option<&String> {
    self.additional_input_field_name.as_ref()
  }

  pub fn reset_additional_input_field_name(&mut self) {
    self.additional_input_field_name = None;
  }

  pub fn set_seller_input_definition(&mut self, seller_input_definition: ::models::SellerInputDefinition) {
    self.seller_input_definition = Some(seller_input_definition);
  }

  pub fn with_seller_input_definition(mut self, seller_input_definition: ::models::SellerInputDefinition) -> AdditionalInputs {
    self.seller_input_definition = Some(seller_input_definition);
    self
  }

  pub fn seller_input_definition(&self) -> Option<&::models::SellerInputDefinition> {
    self.seller_input_definition.as_ref()
  }

  pub fn reset_seller_input_definition(&mut self) {
    self.seller_input_definition = None;
  }

}



