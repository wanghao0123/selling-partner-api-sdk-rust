/* 
 * Selling Partner API for Merchant Fulfillment
 *
 * The Selling Partner API for Merchant Fulfillment helps you build applications that let sellers purchase shipping for non-Prime and Prime orders using Amazonâ€™s Buy Shipping Services.
 *
 * OpenAPI spec version: v0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// GetEligibleShipmentServicesRequest : Request schema.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct GetEligibleShipmentServicesRequest {
  /// Shipment information required for requesting shipping service offers.
  #[serde(rename = "ShipmentRequestDetails")]
  shipment_request_details: ::models::ShipmentRequestDetails,
  #[serde(rename = "ShippingOfferingFilter")]
  shipping_offering_filter: Option<::models::ShippingOfferingFilter>
}

impl GetEligibleShipmentServicesRequest {
  /// Request schema.
  pub fn new(shipment_request_details: ::models::ShipmentRequestDetails) -> GetEligibleShipmentServicesRequest {
    GetEligibleShipmentServicesRequest {
      shipment_request_details: shipment_request_details,
      shipping_offering_filter: None
    }
  }

  pub fn set_shipment_request_details(&mut self, shipment_request_details: ::models::ShipmentRequestDetails) {
    self.shipment_request_details = shipment_request_details;
  }

  pub fn with_shipment_request_details(mut self, shipment_request_details: ::models::ShipmentRequestDetails) -> GetEligibleShipmentServicesRequest {
    self.shipment_request_details = shipment_request_details;
    self
  }

  pub fn shipment_request_details(&self) -> &::models::ShipmentRequestDetails {
    &self.shipment_request_details
  }


  pub fn set_shipping_offering_filter(&mut self, shipping_offering_filter: ::models::ShippingOfferingFilter) {
    self.shipping_offering_filter = Some(shipping_offering_filter);
  }

  pub fn with_shipping_offering_filter(mut self, shipping_offering_filter: ::models::ShippingOfferingFilter) -> GetEligibleShipmentServicesRequest {
    self.shipping_offering_filter = Some(shipping_offering_filter);
    self
  }

  pub fn shipping_offering_filter(&self) -> Option<&::models::ShippingOfferingFilter> {
    self.shipping_offering_filter.as_ref()
  }

  pub fn reset_shipping_offering_filter(&mut self) {
    self.shipping_offering_filter = None;
  }

}



