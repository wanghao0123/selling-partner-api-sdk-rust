/* 
 * Selling Partner API for Merchant Fulfillment
 *
 * The Selling Partner API for Merchant Fulfillment helps you build applications that let sellers purchase shipping for non-Prime and Prime orders using Amazonâ€™s Buy Shipping Services.
 *
 * OpenAPI spec version: v0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// LabelFormatOption : The label format details and whether to include a packing slip.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct LabelFormatOption {
  /// When true, include a packing slip with the label.
  #[serde(rename = "IncludePackingSlipWithLabel")]
  include_packing_slip_with_label: Option<bool>,
  #[serde(rename = "LabelFormat")]
  label_format: Option<::models::LabelFormat>
}

impl LabelFormatOption {
  /// The label format details and whether to include a packing slip.
  pub fn new() -> LabelFormatOption {
    LabelFormatOption {
      include_packing_slip_with_label: None,
      label_format: None
    }
  }

  pub fn set_include_packing_slip_with_label(&mut self, include_packing_slip_with_label: bool) {
    self.include_packing_slip_with_label = Some(include_packing_slip_with_label);
  }

  pub fn with_include_packing_slip_with_label(mut self, include_packing_slip_with_label: bool) -> LabelFormatOption {
    self.include_packing_slip_with_label = Some(include_packing_slip_with_label);
    self
  }

  pub fn include_packing_slip_with_label(&self) -> Option<&bool> {
    self.include_packing_slip_with_label.as_ref()
  }

  pub fn reset_include_packing_slip_with_label(&mut self) {
    self.include_packing_slip_with_label = None;
  }

  pub fn set_label_format(&mut self, label_format: ::models::LabelFormat) {
    self.label_format = Some(label_format);
  }

  pub fn with_label_format(mut self, label_format: ::models::LabelFormat) -> LabelFormatOption {
    self.label_format = Some(label_format);
    self
  }

  pub fn label_format(&self) -> Option<&::models::LabelFormat> {
    self.label_format.as_ref()
  }

  pub fn reset_label_format(&mut self) {
    self.label_format = None;
  }

}



