/* 
 * Selling Partner API for Messaging
 *
 * With the Messaging API you can build applications that send messages to buyers. You can get a list of message types that are available for an order that you specify, then call an operation that sends a message to the buyer for that order. The Messaging API returns responses that are formed according to the <a href=https://tools.ietf.org/html/draft-kelly-json-hal-08>JSON Hypertext Application Language</a> (HAL) standard.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// CreateConfirmDeliveryDetailsRequest : The request schema for the createConfirmDeliveryDetails operation.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct CreateConfirmDeliveryDetailsRequest {
  /// The text to be sent to the buyer. Only links related to order delivery are allowed. Do not include HTML or email addresses. The text must be written in the buyer's language of preference, which can be retrieved from the GetAttributes operation.
  #[serde(rename = "text")]
  text: Option<String>
}

impl CreateConfirmDeliveryDetailsRequest {
  /// The request schema for the createConfirmDeliveryDetails operation.
  pub fn new() -> CreateConfirmDeliveryDetailsRequest {
    CreateConfirmDeliveryDetailsRequest {
      text: None
    }
  }

  pub fn set_text(&mut self, text: String) {
    self.text = Some(text);
  }

  pub fn with_text(mut self, text: String) -> CreateConfirmDeliveryDetailsRequest {
    self.text = Some(text);
    self
  }

  pub fn text(&self) -> Option<&String> {
    self.text.as_ref()
  }

  pub fn reset_text(&mut self) {
    self.text = None;
  }

}



