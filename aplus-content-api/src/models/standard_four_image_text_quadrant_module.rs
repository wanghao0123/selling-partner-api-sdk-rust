/* 
 * Selling Partner API for A+ Content Management
 *
 * With the A+ Content API, you can build applications that help selling partners add rich marketing content to their Amazon product detail pages. A+ content helps selling partners share their brand and product story, which helps buyers make informed purchasing decisions. Selling partners assemble content by choosing from content modules and adding images and text.
 *
 * OpenAPI spec version: 2020-11-01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// StandardFourImageTextQuadrantModule : Four standard images with text, presented on a grid of four quadrants.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct StandardFourImageTextQuadrantModule {
  #[serde(rename = "block1")]
  block1: ::models::StandardImageTextBlock,
  #[serde(rename = "block2")]
  block2: ::models::StandardImageTextBlock,
  #[serde(rename = "block3")]
  block3: ::models::StandardImageTextBlock,
  #[serde(rename = "block4")]
  block4: ::models::StandardImageTextBlock
}

impl StandardFourImageTextQuadrantModule {
  /// Four standard images with text, presented on a grid of four quadrants.
  pub fn new(block1: ::models::StandardImageTextBlock, block2: ::models::StandardImageTextBlock, block3: ::models::StandardImageTextBlock, block4: ::models::StandardImageTextBlock) -> StandardFourImageTextQuadrantModule {
    StandardFourImageTextQuadrantModule {
      block1: block1,
      block2: block2,
      block3: block3,
      block4: block4
    }
  }

  pub fn set_block1(&mut self, block1: ::models::StandardImageTextBlock) {
    self.block1 = block1;
  }

  pub fn with_block1(mut self, block1: ::models::StandardImageTextBlock) -> StandardFourImageTextQuadrantModule {
    self.block1 = block1;
    self
  }

  pub fn block1(&self) -> &::models::StandardImageTextBlock {
    &self.block1
  }


  pub fn set_block2(&mut self, block2: ::models::StandardImageTextBlock) {
    self.block2 = block2;
  }

  pub fn with_block2(mut self, block2: ::models::StandardImageTextBlock) -> StandardFourImageTextQuadrantModule {
    self.block2 = block2;
    self
  }

  pub fn block2(&self) -> &::models::StandardImageTextBlock {
    &self.block2
  }


  pub fn set_block3(&mut self, block3: ::models::StandardImageTextBlock) {
    self.block3 = block3;
  }

  pub fn with_block3(mut self, block3: ::models::StandardImageTextBlock) -> StandardFourImageTextQuadrantModule {
    self.block3 = block3;
    self
  }

  pub fn block3(&self) -> &::models::StandardImageTextBlock {
    &self.block3
  }


  pub fn set_block4(&mut self, block4: ::models::StandardImageTextBlock) {
    self.block4 = block4;
  }

  pub fn with_block4(mut self, block4: ::models::StandardImageTextBlock) -> StandardFourImageTextQuadrantModule {
    self.block4 = block4;
    self
  }

  pub fn block4(&self) -> &::models::StandardImageTextBlock {
    &self.block4
  }


}



