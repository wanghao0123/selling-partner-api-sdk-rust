/* 
 * Selling Partner API for A+ Content Management
 *
 * With the A+ Content API, you can build applications that help selling partners add rich marketing content to their Amazon product detail pages. A+ content helps selling partners share their brand and product story, which helps buyers make informed purchasing decisions. Selling partners assemble content by choosing from content modules and adding images and text.
 *
 * OpenAPI spec version: 2020-11-01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// StandardImageTextCaptionBlock : The A+ Content standard image and text block, with a related caption. The caption may not display on all devices.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct StandardImageTextCaptionBlock {
  #[serde(rename = "block")]
  block: Option<::models::StandardImageTextBlock>,
  #[serde(rename = "caption")]
  caption: Option<::models::TextComponent>
}

impl StandardImageTextCaptionBlock {
  /// The A+ Content standard image and text block, with a related caption. The caption may not display on all devices.
  pub fn new() -> StandardImageTextCaptionBlock {
    StandardImageTextCaptionBlock {
      block: None,
      caption: None
    }
  }

  pub fn set_block(&mut self, block: ::models::StandardImageTextBlock) {
    self.block = Some(block);
  }

  pub fn with_block(mut self, block: ::models::StandardImageTextBlock) -> StandardImageTextCaptionBlock {
    self.block = Some(block);
    self
  }

  pub fn block(&self) -> Option<&::models::StandardImageTextBlock> {
    self.block.as_ref()
  }

  pub fn reset_block(&mut self) {
    self.block = None;
  }

  pub fn set_caption(&mut self, caption: ::models::TextComponent) {
    self.caption = Some(caption);
  }

  pub fn with_caption(mut self, caption: ::models::TextComponent) -> StandardImageTextCaptionBlock {
    self.caption = Some(caption);
    self
  }

  pub fn caption(&self) -> Option<&::models::TextComponent> {
    self.caption.as_ref()
  }

  pub fn reset_caption(&mut self) {
    self.caption = None;
  }

}



