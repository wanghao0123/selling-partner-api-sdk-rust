/* 
 * Selling Partner API for A+ Content Management
 *
 * With the A+ Content API, you can build applications that help selling partners add rich marketing content to their Amazon product detail pages. A+ content helps selling partners share their brand and product story, which helps buyers make informed purchasing decisions. Selling partners assemble content by choosing from content modules and adding images and text.
 *
 * OpenAPI spec version: 2020-11-01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// StandardTextPairBlock : The A+ Content standard label and description block, comprised of a pair of text components.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct StandardTextPairBlock {
  #[serde(rename = "label")]
  label: Option<::models::TextComponent>,
  #[serde(rename = "description")]
  description: Option<::models::TextComponent>
}

impl StandardTextPairBlock {
  /// The A+ Content standard label and description block, comprised of a pair of text components.
  pub fn new() -> StandardTextPairBlock {
    StandardTextPairBlock {
      label: None,
      description: None
    }
  }

  pub fn set_label(&mut self, label: ::models::TextComponent) {
    self.label = Some(label);
  }

  pub fn with_label(mut self, label: ::models::TextComponent) -> StandardTextPairBlock {
    self.label = Some(label);
    self
  }

  pub fn label(&self) -> Option<&::models::TextComponent> {
    self.label.as_ref()
  }

  pub fn reset_label(&mut self) {
    self.label = None;
  }

  pub fn set_description(&mut self, description: ::models::TextComponent) {
    self.description = Some(description);
  }

  pub fn with_description(mut self, description: ::models::TextComponent) -> StandardTextPairBlock {
    self.description = Some(description);
    self
  }

  pub fn description(&self) -> Option<&::models::TextComponent> {
    self.description.as_ref()
  }

  pub fn reset_description(&mut self) {
    self.description = None;
  }

}



