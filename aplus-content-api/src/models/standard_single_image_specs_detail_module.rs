/* 
 * Selling Partner API for A+ Content Management
 *
 * With the A+ Content API, you can build applications that help selling partners add rich marketing content to their Amazon product detail pages. A+ content helps selling partners share their brand and product story, which helps buyers make informed purchasing decisions. Selling partners assemble content by choosing from content modules and adding images and text.
 *
 * OpenAPI spec version: 2020-11-01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// StandardSingleImageSpecsDetailModule : A standard image with paragraphs and a bulleted list, and extra space for technical details.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct StandardSingleImageSpecsDetailModule {
  #[serde(rename = "headline")]
  headline: Option<::models::TextComponent>,
  #[serde(rename = "image")]
  image: Option<::models::ImageComponent>,
  #[serde(rename = "descriptionHeadline")]
  description_headline: Option<::models::TextComponent>,
  #[serde(rename = "descriptionBlock1")]
  description_block1: Option<::models::StandardTextBlock>,
  #[serde(rename = "descriptionBlock2")]
  description_block2: Option<::models::StandardTextBlock>,
  #[serde(rename = "specificationHeadline")]
  specification_headline: Option<::models::TextComponent>,
  #[serde(rename = "specificationListBlock")]
  specification_list_block: Option<::models::StandardHeaderTextListBlock>,
  #[serde(rename = "specificationTextBlock")]
  specification_text_block: Option<::models::StandardTextBlock>
}

impl StandardSingleImageSpecsDetailModule {
  /// A standard image with paragraphs and a bulleted list, and extra space for technical details.
  pub fn new() -> StandardSingleImageSpecsDetailModule {
    StandardSingleImageSpecsDetailModule {
      headline: None,
      image: None,
      description_headline: None,
      description_block1: None,
      description_block2: None,
      specification_headline: None,
      specification_list_block: None,
      specification_text_block: None
    }
  }

  pub fn set_headline(&mut self, headline: ::models::TextComponent) {
    self.headline = Some(headline);
  }

  pub fn with_headline(mut self, headline: ::models::TextComponent) -> StandardSingleImageSpecsDetailModule {
    self.headline = Some(headline);
    self
  }

  pub fn headline(&self) -> Option<&::models::TextComponent> {
    self.headline.as_ref()
  }

  pub fn reset_headline(&mut self) {
    self.headline = None;
  }

  pub fn set_image(&mut self, image: ::models::ImageComponent) {
    self.image = Some(image);
  }

  pub fn with_image(mut self, image: ::models::ImageComponent) -> StandardSingleImageSpecsDetailModule {
    self.image = Some(image);
    self
  }

  pub fn image(&self) -> Option<&::models::ImageComponent> {
    self.image.as_ref()
  }

  pub fn reset_image(&mut self) {
    self.image = None;
  }

  pub fn set_description_headline(&mut self, description_headline: ::models::TextComponent) {
    self.description_headline = Some(description_headline);
  }

  pub fn with_description_headline(mut self, description_headline: ::models::TextComponent) -> StandardSingleImageSpecsDetailModule {
    self.description_headline = Some(description_headline);
    self
  }

  pub fn description_headline(&self) -> Option<&::models::TextComponent> {
    self.description_headline.as_ref()
  }

  pub fn reset_description_headline(&mut self) {
    self.description_headline = None;
  }

  pub fn set_description_block1(&mut self, description_block1: ::models::StandardTextBlock) {
    self.description_block1 = Some(description_block1);
  }

  pub fn with_description_block1(mut self, description_block1: ::models::StandardTextBlock) -> StandardSingleImageSpecsDetailModule {
    self.description_block1 = Some(description_block1);
    self
  }

  pub fn description_block1(&self) -> Option<&::models::StandardTextBlock> {
    self.description_block1.as_ref()
  }

  pub fn reset_description_block1(&mut self) {
    self.description_block1 = None;
  }

  pub fn set_description_block2(&mut self, description_block2: ::models::StandardTextBlock) {
    self.description_block2 = Some(description_block2);
  }

  pub fn with_description_block2(mut self, description_block2: ::models::StandardTextBlock) -> StandardSingleImageSpecsDetailModule {
    self.description_block2 = Some(description_block2);
    self
  }

  pub fn description_block2(&self) -> Option<&::models::StandardTextBlock> {
    self.description_block2.as_ref()
  }

  pub fn reset_description_block2(&mut self) {
    self.description_block2 = None;
  }

  pub fn set_specification_headline(&mut self, specification_headline: ::models::TextComponent) {
    self.specification_headline = Some(specification_headline);
  }

  pub fn with_specification_headline(mut self, specification_headline: ::models::TextComponent) -> StandardSingleImageSpecsDetailModule {
    self.specification_headline = Some(specification_headline);
    self
  }

  pub fn specification_headline(&self) -> Option<&::models::TextComponent> {
    self.specification_headline.as_ref()
  }

  pub fn reset_specification_headline(&mut self) {
    self.specification_headline = None;
  }

  pub fn set_specification_list_block(&mut self, specification_list_block: ::models::StandardHeaderTextListBlock) {
    self.specification_list_block = Some(specification_list_block);
  }

  pub fn with_specification_list_block(mut self, specification_list_block: ::models::StandardHeaderTextListBlock) -> StandardSingleImageSpecsDetailModule {
    self.specification_list_block = Some(specification_list_block);
    self
  }

  pub fn specification_list_block(&self) -> Option<&::models::StandardHeaderTextListBlock> {
    self.specification_list_block.as_ref()
  }

  pub fn reset_specification_list_block(&mut self) {
    self.specification_list_block = None;
  }

  pub fn set_specification_text_block(&mut self, specification_text_block: ::models::StandardTextBlock) {
    self.specification_text_block = Some(specification_text_block);
  }

  pub fn with_specification_text_block(mut self, specification_text_block: ::models::StandardTextBlock) -> StandardSingleImageSpecsDetailModule {
    self.specification_text_block = Some(specification_text_block);
    self
  }

  pub fn specification_text_block(&self) -> Option<&::models::StandardTextBlock> {
    self.specification_text_block.as_ref()
  }

  pub fn reset_specification_text_block(&mut self) {
    self.specification_text_block = None;
  }

}



