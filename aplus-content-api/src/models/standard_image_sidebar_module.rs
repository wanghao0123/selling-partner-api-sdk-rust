/* 
 * Selling Partner API for A+ Content Management
 *
 * With the A+ Content API, you can build applications that help selling partners add rich marketing content to their Amazon product detail pages. A+ content helps selling partners share their brand and product story, which helps buyers make informed purchasing decisions. Selling partners assemble content by choosing from content modules and adding images and text.
 *
 * OpenAPI spec version: 2020-11-01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// StandardImageSidebarModule : Two images, two paragraphs, and two bulleted lists. One image is smaller and displayed in the sidebar.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct StandardImageSidebarModule {
  #[serde(rename = "headline")]
  headline: Option<::models::TextComponent>,
  #[serde(rename = "imageCaptionBlock")]
  image_caption_block: Option<::models::StandardImageCaptionBlock>,
  #[serde(rename = "descriptionTextBlock")]
  description_text_block: Option<::models::StandardTextBlock>,
  #[serde(rename = "descriptionListBlock")]
  description_list_block: Option<::models::StandardTextListBlock>,
  #[serde(rename = "sidebarImageTextBlock")]
  sidebar_image_text_block: Option<::models::StandardImageTextBlock>,
  #[serde(rename = "sidebarListBlock")]
  sidebar_list_block: Option<::models::StandardTextListBlock>
}

impl StandardImageSidebarModule {
  /// Two images, two paragraphs, and two bulleted lists. One image is smaller and displayed in the sidebar.
  pub fn new() -> StandardImageSidebarModule {
    StandardImageSidebarModule {
      headline: None,
      image_caption_block: None,
      description_text_block: None,
      description_list_block: None,
      sidebar_image_text_block: None,
      sidebar_list_block: None
    }
  }

  pub fn set_headline(&mut self, headline: ::models::TextComponent) {
    self.headline = Some(headline);
  }

  pub fn with_headline(mut self, headline: ::models::TextComponent) -> StandardImageSidebarModule {
    self.headline = Some(headline);
    self
  }

  pub fn headline(&self) -> Option<&::models::TextComponent> {
    self.headline.as_ref()
  }

  pub fn reset_headline(&mut self) {
    self.headline = None;
  }

  pub fn set_image_caption_block(&mut self, image_caption_block: ::models::StandardImageCaptionBlock) {
    self.image_caption_block = Some(image_caption_block);
  }

  pub fn with_image_caption_block(mut self, image_caption_block: ::models::StandardImageCaptionBlock) -> StandardImageSidebarModule {
    self.image_caption_block = Some(image_caption_block);
    self
  }

  pub fn image_caption_block(&self) -> Option<&::models::StandardImageCaptionBlock> {
    self.image_caption_block.as_ref()
  }

  pub fn reset_image_caption_block(&mut self) {
    self.image_caption_block = None;
  }

  pub fn set_description_text_block(&mut self, description_text_block: ::models::StandardTextBlock) {
    self.description_text_block = Some(description_text_block);
  }

  pub fn with_description_text_block(mut self, description_text_block: ::models::StandardTextBlock) -> StandardImageSidebarModule {
    self.description_text_block = Some(description_text_block);
    self
  }

  pub fn description_text_block(&self) -> Option<&::models::StandardTextBlock> {
    self.description_text_block.as_ref()
  }

  pub fn reset_description_text_block(&mut self) {
    self.description_text_block = None;
  }

  pub fn set_description_list_block(&mut self, description_list_block: ::models::StandardTextListBlock) {
    self.description_list_block = Some(description_list_block);
  }

  pub fn with_description_list_block(mut self, description_list_block: ::models::StandardTextListBlock) -> StandardImageSidebarModule {
    self.description_list_block = Some(description_list_block);
    self
  }

  pub fn description_list_block(&self) -> Option<&::models::StandardTextListBlock> {
    self.description_list_block.as_ref()
  }

  pub fn reset_description_list_block(&mut self) {
    self.description_list_block = None;
  }

  pub fn set_sidebar_image_text_block(&mut self, sidebar_image_text_block: ::models::StandardImageTextBlock) {
    self.sidebar_image_text_block = Some(sidebar_image_text_block);
  }

  pub fn with_sidebar_image_text_block(mut self, sidebar_image_text_block: ::models::StandardImageTextBlock) -> StandardImageSidebarModule {
    self.sidebar_image_text_block = Some(sidebar_image_text_block);
    self
  }

  pub fn sidebar_image_text_block(&self) -> Option<&::models::StandardImageTextBlock> {
    self.sidebar_image_text_block.as_ref()
  }

  pub fn reset_sidebar_image_text_block(&mut self) {
    self.sidebar_image_text_block = None;
  }

  pub fn set_sidebar_list_block(&mut self, sidebar_list_block: ::models::StandardTextListBlock) {
    self.sidebar_list_block = Some(sidebar_list_block);
  }

  pub fn with_sidebar_list_block(mut self, sidebar_list_block: ::models::StandardTextListBlock) -> StandardImageSidebarModule {
    self.sidebar_list_block = Some(sidebar_list_block);
    self
  }

  pub fn sidebar_list_block(&self) -> Option<&::models::StandardTextListBlock> {
    self.sidebar_list_block.as_ref()
  }

  pub fn reset_sidebar_list_block(&mut self) {
    self.sidebar_list_block = None;
  }

}



