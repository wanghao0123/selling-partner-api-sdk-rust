/* 
 * Selling Partner API for A+ Content Management
 *
 * With the A+ Content API, you can build applications that help selling partners add rich marketing content to their Amazon product detail pages. A+ content helps selling partners share their brand and product story, which helps buyers make informed purchasing decisions. Selling partners assemble content by choosing from content modules and adding images and text.
 *
 * OpenAPI spec version: 2020-11-01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ValidateContentDocumentAsinRelationsResponse {
  #[serde(rename = "warnings")]
  warnings: Option<::models::MessageSet>,
  /// A list of error responses returned when a request is unsuccessful.
  #[serde(rename = "errors")]
  errors: Vec<::models::Error>
}

impl ValidateContentDocumentAsinRelationsResponse {
  pub fn new(errors: Vec<::models::Error>) -> ValidateContentDocumentAsinRelationsResponse {
    ValidateContentDocumentAsinRelationsResponse {
      warnings: None,
      errors: errors
    }
  }

  pub fn set_warnings(&mut self, warnings: ::models::MessageSet) {
    self.warnings = Some(warnings);
  }

  pub fn with_warnings(mut self, warnings: ::models::MessageSet) -> ValidateContentDocumentAsinRelationsResponse {
    self.warnings = Some(warnings);
    self
  }

  pub fn warnings(&self) -> Option<&::models::MessageSet> {
    self.warnings.as_ref()
  }

  pub fn reset_warnings(&mut self) {
    self.warnings = None;
  }

  pub fn set_errors(&mut self, errors: Vec<::models::Error>) {
    self.errors = errors;
  }

  pub fn with_errors(mut self, errors: Vec<::models::Error>) -> ValidateContentDocumentAsinRelationsResponse {
    self.errors = errors;
    self
  }

  pub fn errors(&self) -> &Vec<::models::Error> {
    &self.errors
  }


}



