/* 
 * Selling Partner API for Catalog Items
 *
 * The Selling Partner API for Catalog Items helps you programmatically retrieve item details for items in the catalog.
 *
 * OpenAPI spec version: v0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// DecimalWithUnits : The decimal value and unit.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct DecimalWithUnits {
  /// The decimal value.
  #[serde(rename = "value")]
  value: Option<f32>,
  /// The unit of the decimal value.
  #[serde(rename = "Units")]
  units: Option<String>
}

impl DecimalWithUnits {
  /// The decimal value and unit.
  pub fn new() -> DecimalWithUnits {
    DecimalWithUnits {
      value: None,
      units: None
    }
  }

  pub fn set_value(&mut self, value: f32) {
    self.value = Some(value);
  }

  pub fn with_value(mut self, value: f32) -> DecimalWithUnits {
    self.value = Some(value);
    self
  }

  pub fn value(&self) -> Option<&f32> {
    self.value.as_ref()
  }

  pub fn reset_value(&mut self) {
    self.value = None;
  }

  pub fn set_units(&mut self, units: String) {
    self.units = Some(units);
  }

  pub fn with_units(mut self, units: String) -> DecimalWithUnits {
    self.units = Some(units);
    self
  }

  pub fn units(&self) -> Option<&String> {
    self.units.as_ref()
  }

  pub fn reset_units(&mut self) {
    self.units = None;
  }

}



