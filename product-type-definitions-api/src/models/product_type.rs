/* 
 * Selling Partner API for Product Type Definitions
 *
 * The Selling Partner API for Product Type Definitions provides programmatic access to attribute and data requirements for product types in the Amazon catalog. Use this API to return the JSON Schema for a product type that you can then use with other Selling Partner APIs, such as the Selling Partner API for Listings Items, the Selling Partner API for Catalog Items, and the Selling Partner API for Feeds (for JSON-based listing feeds).
 *
 * OpenAPI spec version: 2020-09-01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// ProductType : An Amazon product type with a definition available.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ProductType {
  /// The name of the Amazon product type.
  #[serde(rename = "name")]
  name: String,
  /// The Amazon marketplace identifiers for which the product type definition is available.
  #[serde(rename = "marketplaceIds")]
  marketplace_ids: Vec<String>
}

impl ProductType {
  /// An Amazon product type with a definition available.
  pub fn new(name: String, marketplace_ids: Vec<String>) -> ProductType {
    ProductType {
      name: name,
      marketplace_ids: marketplace_ids
    }
  }

  pub fn set_name(&mut self, name: String) {
    self.name = name;
  }

  pub fn with_name(mut self, name: String) -> ProductType {
    self.name = name;
    self
  }

  pub fn name(&self) -> &String {
    &self.name
  }


  pub fn set_marketplace_ids(&mut self, marketplace_ids: Vec<String>) {
    self.marketplace_ids = marketplace_ids;
  }

  pub fn with_marketplace_ids(mut self, marketplace_ids: Vec<String>) -> ProductType {
    self.marketplace_ids = marketplace_ids;
    self
  }

  pub fn marketplace_ids(&self) -> &Vec<String> {
    &self.marketplace_ids
  }


}



