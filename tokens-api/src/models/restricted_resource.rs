/* 
 * Selling Partner API for Tokens 
 *
 * The Selling Partner API for Tokens provides a secure way to access a customers's PII (Personally Identifiable Information). You can call the Tokens API to get a Restricted Data Token (RDT) for one or more restricted resources that you specify. The RDT authorizes you to make subsequent requests to access these restricted resources.
 *
 * OpenAPI spec version: 2021-03-01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// RestrictedResource : Model of a restricted resource.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct RestrictedResource {
  /// The HTTP method used with the restricted resource.
  #[serde(rename = "method")]
  method: String,
  /// The path from a restricted operation. This could be:  - A specific path containing a seller's order ID, for example ```/orders/v0/orders/902-3159896-1390916/address```.  - A generic path that does not contain a seller's order ID, for example```/orders/v0/orders/{orderId}/address```).
  #[serde(rename = "path")]
  path: String
}

impl RestrictedResource {
  /// Model of a restricted resource.
  pub fn new(method: String, path: String) -> RestrictedResource {
    RestrictedResource {
      method: method,
      path: path
    }
  }

  pub fn set_method(&mut self, method: String) {
    self.method = method;
  }

  pub fn with_method(mut self, method: String) -> RestrictedResource {
    self.method = method;
    self
  }

  pub fn method(&self) -> &String {
    &self.method
  }


  pub fn set_path(&mut self, path: String) {
    self.path = path;
  }

  pub fn with_path(mut self, path: String) -> RestrictedResource {
    self.path = path;
    self
  }

  pub fn path(&self) -> &String {
    &self.path
  }


}



