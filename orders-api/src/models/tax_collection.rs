/* 
 * Selling Partner API for Orders
 *
 * The Selling Partner API for Orders helps you programmatically retrieve order information. These APIs let you develop fast, flexible, custom applications in areas like order synchronization, order research, and demand-based decision support tools.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// TaxCollection : Information about withheld taxes.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct TaxCollection {
  /// The tax collection model applied to the item.
  #[serde(rename = "Model")]
  model: Option<String>,
  /// The party responsible for withholding the taxes and remitting them to the taxing authority.
  #[serde(rename = "ResponsibleParty")]
  responsible_party: Option<String>
}

impl TaxCollection {
  /// Information about withheld taxes.
  pub fn new() -> TaxCollection {
    TaxCollection {
      model: None,
      responsible_party: None
    }
  }

  pub fn set_model(&mut self, model: String) {
    self.model = Some(model);
  }

  pub fn with_model(mut self, model: String) -> TaxCollection {
    self.model = Some(model);
    self
  }

  pub fn model(&self) -> Option<&String> {
    self.model.as_ref()
  }

  pub fn reset_model(&mut self) {
    self.model = None;
  }

  pub fn set_responsible_party(&mut self, responsible_party: String) {
    self.responsible_party = Some(responsible_party);
  }

  pub fn with_responsible_party(mut self, responsible_party: String) -> TaxCollection {
    self.responsible_party = Some(responsible_party);
    self
  }

  pub fn responsible_party(&self) -> Option<&String> {
    self.responsible_party.as_ref()
  }

  pub fn reset_responsible_party(&mut self) {
    self.responsible_party = None;
  }

}



