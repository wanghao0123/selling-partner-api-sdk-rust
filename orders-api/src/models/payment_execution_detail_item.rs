/* 
 * Selling Partner API for Orders
 *
 * The Selling Partner API for Orders helps you programmatically retrieve order information. These APIs let you develop fast, flexible, custom applications in areas like order synchronization, order research, and demand-based decision support tools.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// PaymentExecutionDetailItem : Information about a sub-payment method used to pay for a COD order.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct PaymentExecutionDetailItem {
  #[serde(rename = "Payment")]
  payment: ::models::Money,
  /// A sub-payment method for a COD order.  Possible values:  * COD - Cash On Delivery.  * GC - Gift Card.  * PointsAccount - Amazon Points.
  #[serde(rename = "PaymentMethod")]
  payment_method: String
}

impl PaymentExecutionDetailItem {
  /// Information about a sub-payment method used to pay for a COD order.
  pub fn new(payment: ::models::Money, payment_method: String) -> PaymentExecutionDetailItem {
    PaymentExecutionDetailItem {
      payment: payment,
      payment_method: payment_method
    }
  }

  pub fn set_payment(&mut self, payment: ::models::Money) {
    self.payment = payment;
  }

  pub fn with_payment(mut self, payment: ::models::Money) -> PaymentExecutionDetailItem {
    self.payment = payment;
    self
  }

  pub fn payment(&self) -> &::models::Money {
    &self.payment
  }


  pub fn set_payment_method(&mut self, payment_method: String) {
    self.payment_method = payment_method;
  }

  pub fn with_payment_method(mut self, payment_method: String) -> PaymentExecutionDetailItem {
    self.payment_method = payment_method;
    self
  }

  pub fn payment_method(&self) -> &String {
    &self.payment_method
  }


}



