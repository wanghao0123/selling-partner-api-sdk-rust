/* 
 * Selling Partner API for Direct Fulfillment Shipping
 *
 * The Selling Partner API for Direct Fulfillment Shipping provides programmatic access to a direct fulfillment vendor's shipping data.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// GetCustomerInvoiceResponse : The response schema for the getCustomerInvoice operation.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct GetCustomerInvoiceResponse {
  /// The payload for the getCustomerInvoice operation.
  #[serde(rename = "payload")]
  payload: Option<::models::CustomerInvoice>,
  #[serde(rename = "errors")]
  errors: Option<::models::ErrorList>
}

impl GetCustomerInvoiceResponse {
  /// The response schema for the getCustomerInvoice operation.
  pub fn new() -> GetCustomerInvoiceResponse {
    GetCustomerInvoiceResponse {
      payload: None,
      errors: None
    }
  }

  pub fn set_payload(&mut self, payload: ::models::CustomerInvoice) {
    self.payload = Some(payload);
  }

  pub fn with_payload(mut self, payload: ::models::CustomerInvoice) -> GetCustomerInvoiceResponse {
    self.payload = Some(payload);
    self
  }

  pub fn payload(&self) -> Option<&::models::CustomerInvoice> {
    self.payload.as_ref()
  }

  pub fn reset_payload(&mut self) {
    self.payload = None;
  }

  pub fn set_errors(&mut self, errors: ::models::ErrorList) {
    self.errors = Some(errors);
  }

  pub fn with_errors(mut self, errors: ::models::ErrorList) -> GetCustomerInvoiceResponse {
    self.errors = Some(errors);
    self
  }

  pub fn errors(&self) -> Option<&::models::ErrorList> {
    self.errors.as_ref()
  }

  pub fn reset_errors(&mut self) {
    self.errors = None;
  }

}



