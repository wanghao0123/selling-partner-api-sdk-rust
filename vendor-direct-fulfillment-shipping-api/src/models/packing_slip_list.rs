/* 
 * Selling Partner API for Direct Fulfillment Shipping
 *
 * The Selling Partner API for Direct Fulfillment Shipping provides programmatic access to a direct fulfillment vendor's shipping data.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// PackingSlipList : A list of packing slips.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct PackingSlipList {
  #[serde(rename = "pagination")]
  pagination: Option<::models::Pagination>,
  #[serde(rename = "packingSlips")]
  packing_slips: Option<Vec<::models::PackingSlip>>
}

impl PackingSlipList {
  /// A list of packing slips.
  pub fn new() -> PackingSlipList {
    PackingSlipList {
      pagination: None,
      packing_slips: None
    }
  }

  pub fn set_pagination(&mut self, pagination: ::models::Pagination) {
    self.pagination = Some(pagination);
  }

  pub fn with_pagination(mut self, pagination: ::models::Pagination) -> PackingSlipList {
    self.pagination = Some(pagination);
    self
  }

  pub fn pagination(&self) -> Option<&::models::Pagination> {
    self.pagination.as_ref()
  }

  pub fn reset_pagination(&mut self) {
    self.pagination = None;
  }

  pub fn set_packing_slips(&mut self, packing_slips: Vec<::models::PackingSlip>) {
    self.packing_slips = Some(packing_slips);
  }

  pub fn with_packing_slips(mut self, packing_slips: Vec<::models::PackingSlip>) -> PackingSlipList {
    self.packing_slips = Some(packing_slips);
    self
  }

  pub fn packing_slips(&self) -> Option<&Vec<::models::PackingSlip>> {
    self.packing_slips.as_ref()
  }

  pub fn reset_packing_slips(&mut self) {
    self.packing_slips = None;
  }

}



