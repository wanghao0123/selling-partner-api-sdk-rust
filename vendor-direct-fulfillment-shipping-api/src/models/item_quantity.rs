/* 
 * Selling Partner API for Direct Fulfillment Shipping
 *
 * The Selling Partner API for Direct Fulfillment Shipping provides programmatic access to a direct fulfillment vendor's shipping data.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// ItemQuantity : Details of item quantity.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ItemQuantity {
  /// Quantity of units shipped for a specific item at a shipment level. If the item is present only in certain packages or pallets within the shipment, please provide this at the appropriate package or pallet level.
  #[serde(rename = "amount")]
  amount: i32,
  /// Unit of measure for the shipped quantity.
  #[serde(rename = "unitOfMeasure")]
  unit_of_measure: String
}

impl ItemQuantity {
  /// Details of item quantity.
  pub fn new(amount: i32, unit_of_measure: String) -> ItemQuantity {
    ItemQuantity {
      amount: amount,
      unit_of_measure: unit_of_measure
    }
  }

  pub fn set_amount(&mut self, amount: i32) {
    self.amount = amount;
  }

  pub fn with_amount(mut self, amount: i32) -> ItemQuantity {
    self.amount = amount;
    self
  }

  pub fn amount(&self) -> &i32 {
    &self.amount
  }


  pub fn set_unit_of_measure(&mut self, unit_of_measure: String) {
    self.unit_of_measure = unit_of_measure;
  }

  pub fn with_unit_of_measure(mut self, unit_of_measure: String) -> ItemQuantity {
    self.unit_of_measure = unit_of_measure;
    self
  }

  pub fn unit_of_measure(&self) -> &String {
    &self.unit_of_measure
  }


}



