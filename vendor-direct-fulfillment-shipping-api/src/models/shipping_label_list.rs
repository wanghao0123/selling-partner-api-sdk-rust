/* 
 * Selling Partner API for Direct Fulfillment Shipping
 *
 * The Selling Partner API for Direct Fulfillment Shipping provides programmatic access to a direct fulfillment vendor's shipping data.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ShippingLabelList {
  #[serde(rename = "pagination")]
  pagination: Option<::models::Pagination>,
  #[serde(rename = "shippingLabels")]
  shipping_labels: Option<Vec<::models::ShippingLabel>>
}

impl ShippingLabelList {
  pub fn new() -> ShippingLabelList {
    ShippingLabelList {
      pagination: None,
      shipping_labels: None
    }
  }

  pub fn set_pagination(&mut self, pagination: ::models::Pagination) {
    self.pagination = Some(pagination);
  }

  pub fn with_pagination(mut self, pagination: ::models::Pagination) -> ShippingLabelList {
    self.pagination = Some(pagination);
    self
  }

  pub fn pagination(&self) -> Option<&::models::Pagination> {
    self.pagination.as_ref()
  }

  pub fn reset_pagination(&mut self) {
    self.pagination = None;
  }

  pub fn set_shipping_labels(&mut self, shipping_labels: Vec<::models::ShippingLabel>) {
    self.shipping_labels = Some(shipping_labels);
  }

  pub fn with_shipping_labels(mut self, shipping_labels: Vec<::models::ShippingLabel>) -> ShippingLabelList {
    self.shipping_labels = Some(shipping_labels);
    self
  }

  pub fn shipping_labels(&self) -> Option<&Vec<::models::ShippingLabel>> {
    self.shipping_labels.as_ref()
  }

  pub fn reset_shipping_labels(&mut self) {
    self.shipping_labels = None;
  }

}



