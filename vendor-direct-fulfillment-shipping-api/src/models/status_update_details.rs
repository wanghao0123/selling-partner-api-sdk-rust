/* 
 * Selling Partner API for Direct Fulfillment Shipping
 *
 * The Selling Partner API for Direct Fulfillment Shipping provides programmatic access to a direct fulfillment vendor's shipping data.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// StatusUpdateDetails : Details for the shipment status update given by the vendor for the specific package.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct StatusUpdateDetails {
  /// This is required to be provided for every package and should match with the trackingNumber sent for the shipment confirmation.
  #[serde(rename = "trackingNumber")]
  tracking_number: String,
  /// Indicates the shipment status code of the package that provides transportation information for Amazon tracking systems and ultimately for the final customer.
  #[serde(rename = "statusCode")]
  status_code: String,
  /// Provides a reason code for the status of the package that will provide additional information about the transportation status.
  #[serde(rename = "reasonCode")]
  reason_code: String,
  /// The date and time when the shipment status was updated. This field is expected to be in ISO-8601 date/time format, with UTC time zone or UTC offset. For example, 2020-07-16T23:00:00Z or 2020-07-16T23:00:00+01:00.
  #[serde(rename = "statusDateTime")]
  status_date_time: String,
  #[serde(rename = "statusLocationAddress")]
  status_location_address: ::models::Address,
  #[serde(rename = "shipmentSchedule")]
  shipment_schedule: Option<Value>
}

impl StatusUpdateDetails {
  /// Details for the shipment status update given by the vendor for the specific package.
  pub fn new(tracking_number: String, status_code: String, reason_code: String, status_date_time: String, status_location_address: ::models::Address) -> StatusUpdateDetails {
    StatusUpdateDetails {
      tracking_number: tracking_number,
      status_code: status_code,
      reason_code: reason_code,
      status_date_time: status_date_time,
      status_location_address: status_location_address,
      shipment_schedule: None
    }
  }

  pub fn set_tracking_number(&mut self, tracking_number: String) {
    self.tracking_number = tracking_number;
  }

  pub fn with_tracking_number(mut self, tracking_number: String) -> StatusUpdateDetails {
    self.tracking_number = tracking_number;
    self
  }

  pub fn tracking_number(&self) -> &String {
    &self.tracking_number
  }


  pub fn set_status_code(&mut self, status_code: String) {
    self.status_code = status_code;
  }

  pub fn with_status_code(mut self, status_code: String) -> StatusUpdateDetails {
    self.status_code = status_code;
    self
  }

  pub fn status_code(&self) -> &String {
    &self.status_code
  }


  pub fn set_reason_code(&mut self, reason_code: String) {
    self.reason_code = reason_code;
  }

  pub fn with_reason_code(mut self, reason_code: String) -> StatusUpdateDetails {
    self.reason_code = reason_code;
    self
  }

  pub fn reason_code(&self) -> &String {
    &self.reason_code
  }


  pub fn set_status_date_time(&mut self, status_date_time: String) {
    self.status_date_time = status_date_time;
  }

  pub fn with_status_date_time(mut self, status_date_time: String) -> StatusUpdateDetails {
    self.status_date_time = status_date_time;
    self
  }

  pub fn status_date_time(&self) -> &String {
    &self.status_date_time
  }


  pub fn set_status_location_address(&mut self, status_location_address: ::models::Address) {
    self.status_location_address = status_location_address;
  }

  pub fn with_status_location_address(mut self, status_location_address: ::models::Address) -> StatusUpdateDetails {
    self.status_location_address = status_location_address;
    self
  }

  pub fn status_location_address(&self) -> &::models::Address {
    &self.status_location_address
  }


  pub fn set_shipment_schedule(&mut self, shipment_schedule: Value) {
    self.shipment_schedule = Some(shipment_schedule);
  }

  pub fn with_shipment_schedule(mut self, shipment_schedule: Value) -> StatusUpdateDetails {
    self.shipment_schedule = Some(shipment_schedule);
    self
  }

  pub fn shipment_schedule(&self) -> Option<&Value> {
    self.shipment_schedule.as_ref()
  }

  pub fn reset_shipment_schedule(&mut self) {
    self.shipment_schedule = None;
  }

}



