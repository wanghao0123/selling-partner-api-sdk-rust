/* 
 * Selling Partner API for Direct Fulfillment Shipping
 *
 * The Selling Partner API for Direct Fulfillment Shipping provides programmatic access to a direct fulfillment vendor's shipping data.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// ShipmentDetails : Details about a shipment.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ShipmentDetails {
  /// This field indicates the date of the departure of the shipment from vendor's location. Vendors are requested to send ASNs within 30 minutes of departure from their warehouse/distribution center or at least 6 hours prior to the appointment time at the Amazon destination warehouse, whichever is sooner. Shipped date mentioned in the Shipment Confirmation should not be in the future.
  #[serde(rename = "shippedDate")]
  shipped_date: String,
  /// Indicate the shipment status.
  #[serde(rename = "shipmentStatus")]
  shipment_status: String,
  /// Provide the priority of the shipment.
  #[serde(rename = "isPriorityShipment")]
  is_priority_shipment: Option<bool>,
  /// The vendor order number is a unique identifier generated by a vendor for their reference.
  #[serde(rename = "vendorOrderNumber")]
  vendor_order_number: Option<String>,
  /// Date on which the shipment is expected to reach the buyer's warehouse. It needs to be an estimate based on the average transit time between the ship-from location and the destination. The exact appointment time will be provided by buyer and is potentially not known when creating the shipment confirmation.
  #[serde(rename = "estimatedDeliveryDate")]
  estimated_delivery_date: Option<String>
}

impl ShipmentDetails {
  /// Details about a shipment.
  pub fn new(shipped_date: String, shipment_status: String) -> ShipmentDetails {
    ShipmentDetails {
      shipped_date: shipped_date,
      shipment_status: shipment_status,
      is_priority_shipment: None,
      vendor_order_number: None,
      estimated_delivery_date: None
    }
  }

  pub fn set_shipped_date(&mut self, shipped_date: String) {
    self.shipped_date = shipped_date;
  }

  pub fn with_shipped_date(mut self, shipped_date: String) -> ShipmentDetails {
    self.shipped_date = shipped_date;
    self
  }

  pub fn shipped_date(&self) -> &String {
    &self.shipped_date
  }


  pub fn set_shipment_status(&mut self, shipment_status: String) {
    self.shipment_status = shipment_status;
  }

  pub fn with_shipment_status(mut self, shipment_status: String) -> ShipmentDetails {
    self.shipment_status = shipment_status;
    self
  }

  pub fn shipment_status(&self) -> &String {
    &self.shipment_status
  }


  pub fn set_is_priority_shipment(&mut self, is_priority_shipment: bool) {
    self.is_priority_shipment = Some(is_priority_shipment);
  }

  pub fn with_is_priority_shipment(mut self, is_priority_shipment: bool) -> ShipmentDetails {
    self.is_priority_shipment = Some(is_priority_shipment);
    self
  }

  pub fn is_priority_shipment(&self) -> Option<&bool> {
    self.is_priority_shipment.as_ref()
  }

  pub fn reset_is_priority_shipment(&mut self) {
    self.is_priority_shipment = None;
  }

  pub fn set_vendor_order_number(&mut self, vendor_order_number: String) {
    self.vendor_order_number = Some(vendor_order_number);
  }

  pub fn with_vendor_order_number(mut self, vendor_order_number: String) -> ShipmentDetails {
    self.vendor_order_number = Some(vendor_order_number);
    self
  }

  pub fn vendor_order_number(&self) -> Option<&String> {
    self.vendor_order_number.as_ref()
  }

  pub fn reset_vendor_order_number(&mut self) {
    self.vendor_order_number = None;
  }

  pub fn set_estimated_delivery_date(&mut self, estimated_delivery_date: String) {
    self.estimated_delivery_date = Some(estimated_delivery_date);
  }

  pub fn with_estimated_delivery_date(mut self, estimated_delivery_date: String) -> ShipmentDetails {
    self.estimated_delivery_date = Some(estimated_delivery_date);
    self
  }

  pub fn estimated_delivery_date(&self) -> Option<&String> {
    self.estimated_delivery_date.as_ref()
  }

  pub fn reset_estimated_delivery_date(&mut self) {
    self.estimated_delivery_date = None;
  }

}



