/* 
 * Selling Partner API for Shipping
 *
 * Provides programmatic access to Amazon Shipping APIs.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// GetRatesRequest : The payload schema for the getRates operation.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct GetRatesRequest {
  #[serde(rename = "shipTo")]
  ship_to: ::models::Address,
  #[serde(rename = "shipFrom")]
  ship_from: ::models::Address,
  #[serde(rename = "serviceTypes")]
  service_types: ::models::ServiceTypeList,
  /// The start date and time. This defaults to the current date and time.
  #[serde(rename = "shipDate")]
  ship_date: Option<String>,
  #[serde(rename = "containerSpecifications")]
  container_specifications: ::models::ContainerSpecificationList
}

impl GetRatesRequest {
  /// The payload schema for the getRates operation.
  pub fn new(ship_to: ::models::Address, ship_from: ::models::Address, service_types: ::models::ServiceTypeList, container_specifications: ::models::ContainerSpecificationList) -> GetRatesRequest {
    GetRatesRequest {
      ship_to: ship_to,
      ship_from: ship_from,
      service_types: service_types,
      ship_date: None,
      container_specifications: container_specifications
    }
  }

  pub fn set_ship_to(&mut self, ship_to: ::models::Address) {
    self.ship_to = ship_to;
  }

  pub fn with_ship_to(mut self, ship_to: ::models::Address) -> GetRatesRequest {
    self.ship_to = ship_to;
    self
  }

  pub fn ship_to(&self) -> &::models::Address {
    &self.ship_to
  }


  pub fn set_ship_from(&mut self, ship_from: ::models::Address) {
    self.ship_from = ship_from;
  }

  pub fn with_ship_from(mut self, ship_from: ::models::Address) -> GetRatesRequest {
    self.ship_from = ship_from;
    self
  }

  pub fn ship_from(&self) -> &::models::Address {
    &self.ship_from
  }


  pub fn set_service_types(&mut self, service_types: ::models::ServiceTypeList) {
    self.service_types = service_types;
  }

  pub fn with_service_types(mut self, service_types: ::models::ServiceTypeList) -> GetRatesRequest {
    self.service_types = service_types;
    self
  }

  pub fn service_types(&self) -> &::models::ServiceTypeList {
    &self.service_types
  }


  pub fn set_ship_date(&mut self, ship_date: String) {
    self.ship_date = Some(ship_date);
  }

  pub fn with_ship_date(mut self, ship_date: String) -> GetRatesRequest {
    self.ship_date = Some(ship_date);
    self
  }

  pub fn ship_date(&self) -> Option<&String> {
    self.ship_date.as_ref()
  }

  pub fn reset_ship_date(&mut self) {
    self.ship_date = None;
  }

  pub fn set_container_specifications(&mut self, container_specifications: ::models::ContainerSpecificationList) {
    self.container_specifications = container_specifications;
  }

  pub fn with_container_specifications(mut self, container_specifications: ::models::ContainerSpecificationList) -> GetRatesRequest {
    self.container_specifications = container_specifications;
    self
  }

  pub fn container_specifications(&self) -> &::models::ContainerSpecificationList {
    &self.container_specifications
  }


}



