/* 
 * Selling Partner API for Shipping
 *
 * Provides programmatic access to Amazon Shipping APIs.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// PurchaseShipmentResult : The payload schema for the purchaseShipment operation.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct PurchaseShipmentResult {
  #[serde(rename = "shipmentId")]
  shipment_id: ::models::ShipmentId,
  #[serde(rename = "serviceRate")]
  service_rate: ::models::ServiceRate,
  #[serde(rename = "labelResults")]
  label_results: ::models::LabelResultList
}

impl PurchaseShipmentResult {
  /// The payload schema for the purchaseShipment operation.
  pub fn new(shipment_id: ::models::ShipmentId, service_rate: ::models::ServiceRate, label_results: ::models::LabelResultList) -> PurchaseShipmentResult {
    PurchaseShipmentResult {
      shipment_id: shipment_id,
      service_rate: service_rate,
      label_results: label_results
    }
  }

  pub fn set_shipment_id(&mut self, shipment_id: ::models::ShipmentId) {
    self.shipment_id = shipment_id;
  }

  pub fn with_shipment_id(mut self, shipment_id: ::models::ShipmentId) -> PurchaseShipmentResult {
    self.shipment_id = shipment_id;
    self
  }

  pub fn shipment_id(&self) -> &::models::ShipmentId {
    &self.shipment_id
  }


  pub fn set_service_rate(&mut self, service_rate: ::models::ServiceRate) {
    self.service_rate = service_rate;
  }

  pub fn with_service_rate(mut self, service_rate: ::models::ServiceRate) -> PurchaseShipmentResult {
    self.service_rate = service_rate;
    self
  }

  pub fn service_rate(&self) -> &::models::ServiceRate {
    &self.service_rate
  }


  pub fn set_label_results(&mut self, label_results: ::models::LabelResultList) {
    self.label_results = label_results;
  }

  pub fn with_label_results(mut self, label_results: ::models::LabelResultList) -> PurchaseShipmentResult {
    self.label_results = label_results;
    self
  }

  pub fn label_results(&self) -> &::models::LabelResultList {
    &self.label_results
  }


}



