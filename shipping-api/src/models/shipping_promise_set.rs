/* 
 * Selling Partner API for Shipping
 *
 * Provides programmatic access to Amazon Shipping APIs.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// ShippingPromiseSet : The promised delivery time and pickup time.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ShippingPromiseSet {
  /// The time window in which the shipment will be delivered.
  #[serde(rename = "deliveryWindow")]
  delivery_window: Option<::models::TimeRange>,
  /// The time window in which Amazon Shipping will pick up the shipment.
  #[serde(rename = "receiveWindow")]
  receive_window: Option<::models::TimeRange>
}

impl ShippingPromiseSet {
  /// The promised delivery time and pickup time.
  pub fn new() -> ShippingPromiseSet {
    ShippingPromiseSet {
      delivery_window: None,
      receive_window: None
    }
  }

  pub fn set_delivery_window(&mut self, delivery_window: ::models::TimeRange) {
    self.delivery_window = Some(delivery_window);
  }

  pub fn with_delivery_window(mut self, delivery_window: ::models::TimeRange) -> ShippingPromiseSet {
    self.delivery_window = Some(delivery_window);
    self
  }

  pub fn delivery_window(&self) -> Option<&::models::TimeRange> {
    self.delivery_window.as_ref()
  }

  pub fn reset_delivery_window(&mut self) {
    self.delivery_window = None;
  }

  pub fn set_receive_window(&mut self, receive_window: ::models::TimeRange) {
    self.receive_window = Some(receive_window);
  }

  pub fn with_receive_window(mut self, receive_window: ::models::TimeRange) -> ShippingPromiseSet {
    self.receive_window = Some(receive_window);
    self
  }

  pub fn receive_window(&self) -> Option<&::models::TimeRange> {
    self.receive_window.as_ref()
  }

  pub fn reset_receive_window(&mut self) {
    self.receive_window = None;
  }

}



