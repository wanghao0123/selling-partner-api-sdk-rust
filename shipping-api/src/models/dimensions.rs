/* 
 * Selling Partner API for Shipping
 *
 * Provides programmatic access to Amazon Shipping APIs.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// Dimensions : A set of measurements for a three-dimensional object.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct Dimensions {
  /// The length of the container.
  #[serde(rename = "length")]
  length: f32,
  /// The width of the container.
  #[serde(rename = "width")]
  width: f32,
  /// The height of the container.
  #[serde(rename = "height")]
  height: f32,
  /// The unit of these measurements.
  #[serde(rename = "unit")]
  unit: String
}

impl Dimensions {
  /// A set of measurements for a three-dimensional object.
  pub fn new(length: f32, width: f32, height: f32, unit: String) -> Dimensions {
    Dimensions {
      length: length,
      width: width,
      height: height,
      unit: unit
    }
  }

  pub fn set_length(&mut self, length: f32) {
    self.length = length;
  }

  pub fn with_length(mut self, length: f32) -> Dimensions {
    self.length = length;
    self
  }

  pub fn length(&self) -> &f32 {
    &self.length
  }


  pub fn set_width(&mut self, width: f32) {
    self.width = width;
  }

  pub fn with_width(mut self, width: f32) -> Dimensions {
    self.width = width;
    self
  }

  pub fn width(&self) -> &f32 {
    &self.width
  }


  pub fn set_height(&mut self, height: f32) {
    self.height = height;
  }

  pub fn with_height(mut self, height: f32) -> Dimensions {
    self.height = height;
    self
  }

  pub fn height(&self) -> &f32 {
    &self.height
  }


  pub fn set_unit(&mut self, unit: String) {
    self.unit = unit;
  }

  pub fn with_unit(mut self, unit: String) -> Dimensions {
    self.unit = unit;
    self
  }

  pub fn unit(&self) -> &String {
    &self.unit
  }


}



