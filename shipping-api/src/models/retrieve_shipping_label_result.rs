/* 
 * Selling Partner API for Shipping
 *
 * Provides programmatic access to Amazon Shipping APIs.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// RetrieveShippingLabelResult : The payload schema for the retrieveShippingLabel operation.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct RetrieveShippingLabelResult {
  #[serde(rename = "labelStream")]
  label_stream: ::models::LabelStream,
  #[serde(rename = "labelSpecification")]
  label_specification: ::models::LabelSpecification
}

impl RetrieveShippingLabelResult {
  /// The payload schema for the retrieveShippingLabel operation.
  pub fn new(label_stream: ::models::LabelStream, label_specification: ::models::LabelSpecification) -> RetrieveShippingLabelResult {
    RetrieveShippingLabelResult {
      label_stream: label_stream,
      label_specification: label_specification
    }
  }

  pub fn set_label_stream(&mut self, label_stream: ::models::LabelStream) {
    self.label_stream = label_stream;
  }

  pub fn with_label_stream(mut self, label_stream: ::models::LabelStream) -> RetrieveShippingLabelResult {
    self.label_stream = label_stream;
    self
  }

  pub fn label_stream(&self) -> &::models::LabelStream {
    &self.label_stream
  }


  pub fn set_label_specification(&mut self, label_specification: ::models::LabelSpecification) {
    self.label_specification = label_specification;
  }

  pub fn with_label_specification(mut self, label_specification: ::models::LabelSpecification) -> RetrieveShippingLabelResult {
    self.label_specification = label_specification;
    self
  }

  pub fn label_specification(&self) -> &::models::LabelSpecification {
    &self.label_specification
  }


}



