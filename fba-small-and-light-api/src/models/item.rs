/* 
 * Selling Partner API for FBA Small And Light
 *
 * The Selling Partner API for FBA Small and Light lets you help sellers manage their listings in the Small and Light program. The program reduces the cost of fulfilling orders for small and lightweight FBA inventory. You can enroll or remove items from the program and check item eligibility and enrollment status. You can also preview the estimated program fees charged to a seller for items sold while enrolled in the program.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// Item : An item to be sold.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct Item {
  /// The Amazon Standard Identification Number (ASIN) value used to identify the item.
  #[serde(rename = "asin")]
  asin: String,
  /// The price that the seller plans to charge for the item.
  #[serde(rename = "price")]
  price: ::models::MoneyType
}

impl Item {
  /// An item to be sold.
  pub fn new(asin: String, price: ::models::MoneyType) -> Item {
    Item {
      asin: asin,
      price: price
    }
  }

  pub fn set_asin(&mut self, asin: String) {
    self.asin = asin;
  }

  pub fn with_asin(mut self, asin: String) -> Item {
    self.asin = asin;
    self
  }

  pub fn asin(&self) -> &String {
    &self.asin
  }


  pub fn set_price(&mut self, price: ::models::MoneyType) {
    self.price = price;
  }

  pub fn with_price(mut self, price: ::models::MoneyType) -> Item {
    self.price = price;
    self
  }

  pub fn price(&self) -> &::models::MoneyType {
    &self.price
  }


}



