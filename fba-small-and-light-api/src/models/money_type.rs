/* 
 * Selling Partner API for FBA Small And Light
 *
 * The Selling Partner API for FBA Small and Light lets you help sellers manage their listings in the Small and Light program. The program reduces the cost of fulfilling orders for small and lightweight FBA inventory. You can enroll or remove items from the program and check item eligibility and enrollment status. You can also preview the estimated program fees charged to a seller for items sold while enrolled in the program.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct MoneyType {
  /// The currency code in ISO 4217 format.
  #[serde(rename = "currencyCode")]
  currency_code: Option<String>,
  /// The monetary value.
  #[serde(rename = "amount")]
  amount: Option<f32>
}

impl MoneyType {
  pub fn new() -> MoneyType {
    MoneyType {
      currency_code: None,
      amount: None
    }
  }

  pub fn set_currency_code(&mut self, currency_code: String) {
    self.currency_code = Some(currency_code);
  }

  pub fn with_currency_code(mut self, currency_code: String) -> MoneyType {
    self.currency_code = Some(currency_code);
    self
  }

  pub fn currency_code(&self) -> Option<&String> {
    self.currency_code.as_ref()
  }

  pub fn reset_currency_code(&mut self) {
    self.currency_code = None;
  }

  pub fn set_amount(&mut self, amount: f32) {
    self.amount = Some(amount);
  }

  pub fn with_amount(mut self, amount: f32) -> MoneyType {
    self.amount = Some(amount);
    self
  }

  pub fn amount(&self) -> Option<&f32> {
    self.amount.as_ref()
  }

  pub fn reset_amount(&mut self) {
    self.amount = None;
  }

}



