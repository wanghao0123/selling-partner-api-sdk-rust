/* 
 * Selling Partner API for FBA Small And Light
 *
 * The Selling Partner API for FBA Small and Light lets you help sellers manage their listings in the Small and Light program. The program reduces the cost of fulfilling orders for small and lightweight FBA inventory. You can enroll or remove items from the program and check item eligibility and enrollment status. You can also preview the estimated program fees charged to a seller for items sold while enrolled in the program.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// FeeLineItem : Fee details for a specific fee.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct FeeLineItem {
  /// The type of fee charged to the seller.
  #[serde(rename = "feeType")]
  fee_type: String,
  /// Amount charged to the seller for the specific fee type.
  #[serde(rename = "feeCharge")]
  fee_charge: ::models::MoneyType
}

impl FeeLineItem {
  /// Fee details for a specific fee.
  pub fn new(fee_type: String, fee_charge: ::models::MoneyType) -> FeeLineItem {
    FeeLineItem {
      fee_type: fee_type,
      fee_charge: fee_charge
    }
  }

  pub fn set_fee_type(&mut self, fee_type: String) {
    self.fee_type = fee_type;
  }

  pub fn with_fee_type(mut self, fee_type: String) -> FeeLineItem {
    self.fee_type = fee_type;
    self
  }

  pub fn fee_type(&self) -> &String {
    &self.fee_type
  }


  pub fn set_fee_charge(&mut self, fee_charge: ::models::MoneyType) {
    self.fee_charge = fee_charge;
  }

  pub fn with_fee_charge(mut self, fee_charge: ::models::MoneyType) -> FeeLineItem {
    self.fee_charge = fee_charge;
    self
  }

  pub fn fee_charge(&self) -> &::models::MoneyType {
    &self.fee_charge
  }


}



