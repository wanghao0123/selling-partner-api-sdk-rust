/* 
 * Selling Partner API for Retail Procurement Orders
 *
 * The Selling Partner API for Retail Procurement Orders provides programmatic access to vendor orders data.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct OrderListStatus {
  #[serde(rename = "pagination")]
  pagination: Option<::models::Pagination>,
  #[serde(rename = "ordersStatus")]
  orders_status: Option<Vec<::models::OrderStatus>>
}

impl OrderListStatus {
  pub fn new() -> OrderListStatus {
    OrderListStatus {
      pagination: None,
      orders_status: None
    }
  }

  pub fn set_pagination(&mut self, pagination: ::models::Pagination) {
    self.pagination = Some(pagination);
  }

  pub fn with_pagination(mut self, pagination: ::models::Pagination) -> OrderListStatus {
    self.pagination = Some(pagination);
    self
  }

  pub fn pagination(&self) -> Option<&::models::Pagination> {
    self.pagination.as_ref()
  }

  pub fn reset_pagination(&mut self) {
    self.pagination = None;
  }

  pub fn set_orders_status(&mut self, orders_status: Vec<::models::OrderStatus>) {
    self.orders_status = Some(orders_status);
  }

  pub fn with_orders_status(mut self, orders_status: Vec<::models::OrderStatus>) -> OrderListStatus {
    self.orders_status = Some(orders_status);
    self
  }

  pub fn orders_status(&self) -> Option<&Vec<::models::OrderStatus>> {
    self.orders_status.as_ref()
  }

  pub fn reset_orders_status(&mut self) {
    self.orders_status = None;
  }

}



