/* 
 * Selling Partner API for Retail Procurement Orders
 *
 * The Selling Partner API for Retail Procurement Orders provides programmatic access to vendor orders data.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct OrderList {
  #[serde(rename = "pagination")]
  pagination: Option<::models::Pagination>,
  #[serde(rename = "orders")]
  orders: Option<Vec<::models::Order>>
}

impl OrderList {
  pub fn new() -> OrderList {
    OrderList {
      pagination: None,
      orders: None
    }
  }

  pub fn set_pagination(&mut self, pagination: ::models::Pagination) {
    self.pagination = Some(pagination);
  }

  pub fn with_pagination(mut self, pagination: ::models::Pagination) -> OrderList {
    self.pagination = Some(pagination);
    self
  }

  pub fn pagination(&self) -> Option<&::models::Pagination> {
    self.pagination.as_ref()
  }

  pub fn reset_pagination(&mut self) {
    self.pagination = None;
  }

  pub fn set_orders(&mut self, orders: Vec<::models::Order>) {
    self.orders = Some(orders);
  }

  pub fn with_orders(mut self, orders: Vec<::models::Order>) -> OrderList {
    self.orders = Some(orders);
    self
  }

  pub fn orders(&self) -> Option<&Vec<::models::Order>> {
    self.orders.as_ref()
  }

  pub fn reset_orders(&mut self) {
    self.orders = None;
  }

}



