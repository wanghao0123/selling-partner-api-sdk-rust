/* 
 * Selling Partner API for Retail Procurement Shipments
 *
 * The Selling Partner API for Retail Procurement Shipments provides programmatic access to retail shipping data for vendors.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// Location : Location identifier.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct Location {
  /// Type of location identification.
  #[serde(rename = "type")]
  _type: Option<String>,
  /// Location code.
  #[serde(rename = "locationCode")]
  location_code: Option<String>,
  /// The two digit country code. In ISO 3166-1 alpha-2 format.
  #[serde(rename = "countryCode")]
  country_code: Option<String>
}

impl Location {
  /// Location identifier.
  pub fn new() -> Location {
    Location {
      _type: None,
      location_code: None,
      country_code: None
    }
  }

  pub fn set__type(&mut self, _type: String) {
    self._type = Some(_type);
  }

  pub fn with__type(mut self, _type: String) -> Location {
    self._type = Some(_type);
    self
  }

  pub fn _type(&self) -> Option<&String> {
    self._type.as_ref()
  }

  pub fn reset__type(&mut self) {
    self._type = None;
  }

  pub fn set_location_code(&mut self, location_code: String) {
    self.location_code = Some(location_code);
  }

  pub fn with_location_code(mut self, location_code: String) -> Location {
    self.location_code = Some(location_code);
    self
  }

  pub fn location_code(&self) -> Option<&String> {
    self.location_code.as_ref()
  }

  pub fn reset_location_code(&mut self) {
    self.location_code = None;
  }

  pub fn set_country_code(&mut self, country_code: String) {
    self.country_code = Some(country_code);
  }

  pub fn with_country_code(mut self, country_code: String) -> Location {
    self.country_code = Some(country_code);
    self
  }

  pub fn country_code(&self) -> Option<&String> {
    self.country_code.as_ref()
  }

  pub fn reset_country_code(&mut self) {
    self.country_code = None;
  }

}



