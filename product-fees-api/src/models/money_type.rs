/* 
 * Selling Partner API for Product Fees
 *
 * The Selling Partner API for Product Fees lets you programmatically retrieve estimated fees for a product. You can then account for those fees in your pricing.
 *
 * OpenAPI spec version: v0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct MoneyType {
  /// The currency code in ISO 4217 format.
  #[serde(rename = "CurrencyCode")]
  currency_code: Option<String>,
  /// The monetary value.
  #[serde(rename = "Amount")]
  amount: Option<f32>
}

impl MoneyType {
  pub fn new() -> MoneyType {
    MoneyType {
      currency_code: None,
      amount: None
    }
  }

  pub fn set_currency_code(&mut self, currency_code: String) {
    self.currency_code = Some(currency_code);
  }

  pub fn with_currency_code(mut self, currency_code: String) -> MoneyType {
    self.currency_code = Some(currency_code);
    self
  }

  pub fn currency_code(&self) -> Option<&String> {
    self.currency_code.as_ref()
  }

  pub fn reset_currency_code(&mut self) {
    self.currency_code = None;
  }

  pub fn set_amount(&mut self, amount: f32) {
    self.amount = Some(amount);
  }

  pub fn with_amount(mut self, amount: f32) -> MoneyType {
    self.amount = Some(amount);
    self
  }

  pub fn amount(&self) -> Option<&f32> {
    self.amount.as_ref()
  }

  pub fn reset_amount(&mut self) {
    self.amount = None;
  }

}



